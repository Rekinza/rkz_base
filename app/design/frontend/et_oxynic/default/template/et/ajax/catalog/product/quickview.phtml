<?php
/**
 * @package ET_Ajax
 * @version 1.0.4
 * @copyright Copyright (c) 2014 EcomTheme. (http://www.ecomtheme.com)
 * @license http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */

?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div class="product-view">
    <div class="product-essential row">
        <div class="product-img-box col-lg-4 col-md-4 col-sm-6 col-xs-12">
            <?php echo $this->getChildHtml('media') ?>
        </div>
		<form class="col-lg-8 col-md-8 col-sm-6 col-xs-12" action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
			<?php echo $this->getBlockHtml('formkey') ?>
			<div class="no-display">
				<input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
				<input type="hidden" name="related_product" id="related-products-field" value="" />
			</div>

			<div class="product-shop">
				<div class="product-name">
					<h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
				</div>
				<span class="manufacture"><?php echo $_product->getAttributeText('brands');?></span>
				<?php echo $this->getReviewsSummaryHtml($_product, false, true); ?>
                <?php echo $this->getChildHtml('alert_urls'); ?>
                <?php echo $this->getChildHtml('product_type_data'); ?>
                <?php echo $this->getTierPriceHtml(); ?>
                <?php echo $this->getChildHtml('extrahint'); ?>
				
				<?php if ($_product->getShortDescription()): ?>
					<div class="short-description">
						<h2><?php echo $this->__('Additional Information'); ?></h2>
						<div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description'); ?></div>
					</div>
				<?php endif; ?>
				
				<?php if (!$this->hasOptions()):?>
					<div class="add-to-box">
						<?php if($_product->isSaleable()): ?>
							<?php echo $this->getChildHtml('addtocart') ?>
							<?php if( $this->helper('wishlist')->isAllow() || $_compareUrl=$this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
							<?php endif; ?>
						<?php endif; ?>
						<?php echo $this->getChildHtml('addto') ?>
					</div>
					<?php echo $this->getChildHtml('extra_buttons') ?>
				<?php elseif (!$_product->isSaleable()): ?>
					<div class="add-to-box">
						<?php echo $this->getChildHtml('addto') ?>
					</div>
				<?php endif; ?>
				
				<?php echo $this->getChildHtml('other');?>

				<?php if ($_product->isSaleable() && $this->hasOptions()):?>
					<?php echo $this->getChildChildHtml('container1', '', true, true) ?>
				<?php endif;?>

			</div>

			<div class="clearer"></div>
			<?php if ($_product->isSaleable() && $this->hasOptions()):?>
				<?php echo $this->getChildChildHtml('container2', '', true, true) ?>
			<?php endif;?>
		</form>
		
		<script type="text/javascript">
		//<![CDATA[
			productAddToCartForm = new VarienForm('product_addtocart_form');
			productAddToCartForm.submit = function(button, url) {
				if (this.validator.validate()) {
					var form = this.form;
					var oldUrl = form.action;

					if (url) {
					   form.action = url;
					}
					var e = null;
					try{
    					if (isFrame){
                    		// form = $('product_addtocart_form');
                    		window.top.checkout_cart_add(form, 'form');
                    	} else {
                    		window.checkout_cart_add('', 'form');
                    	}
					} catch(e) {
					}
					this.form.action = oldUrl;
					if (e) {
						throw e;
					}
				}
			}.bind(productAddToCartForm);

			productAddToCartForm.submitLight = function(button, url){
				if(this.validator) {
					var nv = Validation.methods;
					delete Validation.methods['required-entry'];
					delete Validation.methods['validate-one-required'];
					delete Validation.methods['validate-one-required-by-name'];
					// Remove custom datetime validators
					for (var methodName in Validation.methods) {
						if (methodName.match(/^validate-datetime-.*/i)) {
							delete Validation.methods[methodName];
						}
					}

					if (this.validator.validate()) {
						if (url) {
							this.form.action = url;
						}
						this.form.submit();
					}
					Object.extend(Validation.methods, nv);
				}
			}.bind(productAddToCartForm);
		//]]>
		</script>
    </div>
</div>
